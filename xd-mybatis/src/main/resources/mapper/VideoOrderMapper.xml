<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="net.xdclass.online_class.dao.VideoOrderMapper">

    <resultMap id="VideoOrderResultMap" type="VideoOrder">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="user_id" property="userId" />
        <result column="order_number" property="orderNumber" />
        <result column="creation_time" property="creationTime" />
        <result column="state" property="state" />
        <result column="total_fee" property="totalFee" />
        <result column="video_id" property="videoId" />
        <result column="video_title" property="videoTitle" />

        <!--    配置属性一对一    -->
        <!--   property对应VideoOrder里面的user属性名     -->
        <association property="user" javaType="User">
            <id column="user_id" property="id" />
            <result column="name" property="name" />
            <result column="headshot" property="headshot" />
            <result column="creation_time" property="creationTime" />
            <result column="phone" property="phone" />
        </association>
        
    </resultMap>

    <!--  resultMap和上述resultMap的id一致  -->
    <select id="queryVideoOrderList" resultMap="VideoOrderResultMap">
        SELECT
        vo.id,
        vo.user_id,
        vo.order_number,
        vo.creation_time,
        vo.state,
        vo.total_fee,
        vo.video_id,
        vo.video_title,
        u.name,
        u.headshot,
        u.creation_time,
        u.phone
        FROM video_order vo LEFT JOIN user u ON vo.user_id = u.id
    </select>








    <resultMap id="VideoOrderResultMapLazyLoading" type="VideoOrder">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="user_id" property="userId" />
        <result column="order_number" property="orderNumber" />
        <result column="creation_time" property="creationTime" />
        <result column="state" property="state" />
        <result column="total_fee" property="totalFee" />
        <result column="video_id" property="videoId" />
        <result column="video_title" property="videoTitle" />

        <!--当需要查询到user属性信息时，就会调用queryUserById-->
        <!--    select： 指定延迟加载需要执行的statement id  column： 和select查询关联的字段    -->
        <association property="user" javaType="User" column="user_id" select="queryUserById"/>


    </resultMap>

    <!--  resultMap和上述resultMap的id一致  -->
    <select id="queryVideoOrderListLazyLoading" resultMap="VideoOrderResultMapLazyLoading">
        SELECT
        vo.id,
        vo.user_id,
        vo.order_number,
        vo.creation_time,
        vo.state,
        vo.total_fee,
        vo.video_id,
        vo.video_title
        FROM video_order vo
    </select>

    <!--  id与<association>中的select一致-->
    <!-- #{id}的值来自于 <association>中的 column -->
    <select id="queryUserById" resultType="User">
        SELECT * FROM user WHERE id=#{id}
    </select>
</mapper>