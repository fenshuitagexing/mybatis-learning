<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace: 保持全局唯一，最好和DAO层的Java接口一致，这样就可以映射对应的SQL语句到对应的方法名称、参数和返回类型-->
<!--在DAO包的对应类(例如VideoMapper)，右键->Copy Reference获得引用-->
<!--Mybatis使用i接口动态代理与DAO交互，所以namespace必须为DAO层的全路径-->
<mapper namespace="net.xdclass.online_class.dao.VideoOrderMapper">

    <resultMap id="VideoOrderResultMap" type="VideoOrder">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="user_id" property="userId" />
        <result column="order_number" property="orderNumber" />
        <result column="creation_time" property="creationTime" />
        <result column="state" property="state" />
        <result column="total_fee" property="totalFee" />
        <result column="video_id" property="videoId" />
        <result column="video_title" property="videoTitle" />

        <!--    配置属性一对一    -->
        <!--   property对应VideoOrder里面的user属性名     -->
        <association property="user" javaType="User">
            <id column="user_id" property="id" />
            <result column="name" property="name" />
            <result column="headshot" property="headshot" />
            <result column="creation_time" property="creationTime" />
            <result column="phone" property="phone" />
        </association>
        
    </resultMap>

    <!--  和上述resultMap的id一致  -->
    <select id="queryVideoOrderList" resultMap="VideoOrderResultMap">
        SELECT
        vo.id,
        vo.user_id,
        vo.order_number,
        vo.creation_time,
        vo.state,
        vo.total_fee,
        vo.video_id,
        vo.video_title,
        u.name,
        u.headshot,
        u.creation_time,
        u.phone
        FROM video_order vo LEFT JOIN user u ON vo.user_id = u.id
    </select>

</mapper>